{"ast":null,"code":"var _jsxFileName = \"/home/josh-user/Documents/joshTraining/react/reactdemo/src/views/signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const initial = {\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    contact: \"\",\n    password: \"\"\n  };\n  const signUpConstants = {\n    setName: \"SET_NAME\",\n    setEmail: \"SET_EMAIL\",\n    setAddress: \"SET_ADDRESS\",\n    setContact: \"SET_CONTACT\",\n    setPassword: \"SET_PASSWORD\"\n  };\n  const signUpSchema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().required(),\n    address: yup.string().required(),\n    contact: yup.number().required().positive(),\n    password: yup.string().required().min(8)\n  });\n\n  const reducer = (state, action) => {\n    const {\n      type,\n      payload\n    } = action;\n\n    switch (type) {\n      case signUpConstants.setName:\n        {\n          return { ...state,\n            name: payload\n          };\n        }\n\n      case signUpConstants.setEmail:\n        {\n          return { ...state,\n            email: payload\n          };\n        }\n\n      case signUpConstants.setAddress:\n        {\n          return { ...state,\n            address: payload\n          };\n        }\n\n      case signUpConstants.setContact:\n        {\n          return { ...state,\n            contact: payload\n          };\n        }\n\n      case signUpConstants.setPassword:\n        {\n          return { ...state,\n            password: payload\n          };\n        }\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initial);\n  const {\n    name,\n    email,\n    address,\n    contact,\n    password\n  } = state;\n\n  const onSubmit = event => {\n    event.preventDefault();\n    signUpSchema.validate({\n      name,\n      email,\n      address,\n      contact,\n      password\n    }, {\n      abortEarly: false\n    }).then(res => {\n      console.log(\"signup success\");\n    }).catch(error => {\n      error.inner.forEach(e => {\n        if (e.path === \"email\") {\n          console.log(\"invalid email\");\n        }\n\n        if (e.path === \"name\") {\n          console.log(\"invalid name\");\n        }\n\n        if (e.path === \"address\") {\n          console.log(\"invalid address\");\n        }\n\n        if (e.path === \"contact\") {\n          console.log(\"invalid contact\");\n        }\n\n        if (e.path === \"password\") {\n          console.log(\"invalid password\"); //dispatch({type:loginConstants.setPasswordError,payload:e.message});\n        }\n      });\n    });\n    console.log(name);\n    console.log(email);\n    console.log(address);\n    console.log(contact);\n    console.log(password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => {\n          dispatch({\n            type: signUpConstants.setName,\n            payload: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => {\n          dispatch({\n            type: signUpConstants.setEmail,\n            payload: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), \"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: p => {\n          dispatch({\n            type: signUpConstants.setAddress,\n            payload: p.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), \"Contact No:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: contact,\n        onChange: p => {\n          dispatch({\n            type: signUpConstants.setContact,\n            payload: p.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: p => {\n          dispatch({\n            type: signUpConstants.setPassword,\n            payload: p.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"iJvqRY6UsN7NSEFUnbV16lZUV7Y=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/josh-user/Documents/joshTraining/react/reactdemo/src/views/signup.jsx"],"names":["useReducer","yup","Signup","initial","name","email","address","contact","password","signUpConstants","setName","setEmail","setAddress","setContact","setPassword","signUpSchema","object","shape","string","required","number","positive","min","reducer","state","action","type","payload","dispatch","onSubmit","event","preventDefault","validate","abortEarly","then","res","console","log","catch","error","inner","forEach","e","path","target","value","p"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\nimport * as yup from 'yup';\nconst Signup=()=>{\n\n    const initial={\n        name:\"\",\n        email:\"\",\n        address:\"\",\n        contact:\"\",\n        password:\"\",\n    }\n\n    const signUpConstants={\n        setName:\"SET_NAME\",\n        setEmail:\"SET_EMAIL\",\n        setAddress:\"SET_ADDRESS\",\n        setContact:\"SET_CONTACT\",\n        setPassword:\"SET_PASSWORD\",\n    }\n\n    const signUpSchema = yup.object().shape({\n        name:yup.string().required(),\n        email: yup.string().required(),\n        address:yup.string().required(),\n        contact:yup.number().required().positive(),\n        password: yup.string().required().min(8)\n      });\n\n    const reducer=(state,action)=>{\n\n        const {type,payload}=action\n    \n        switch(type)\n        {\n            case signUpConstants.setName:{\n                return{\n                    ...state,\n                    name:payload\n                };\n            }\n    \n    \n            case signUpConstants.setEmail:{\n                return{\n                    ...state,\n                    email:payload\n                };\n    \n            }\n    \n            case signUpConstants.setAddress:{\n                return{\n                    ...state,\n                    address:payload\n                };\n    \n            }\n    \n            case signUpConstants.setContact:{\n                return{\n                    ...state,\n                    contact:payload\n                };\n    \n            }\n            \n            case signUpConstants.setPassword:{\n                return{\n                    ...state,\n                    password:payload\n                };\n    \n            }\n    \n            default:return state;\n        }\n    }\n    \n    \n\n    const [state, dispatch] = useReducer(reducer, initial)\n\n    const {name,email,address,contact,password}=state;\n\n    const onSubmit=(event)=>{\n        event.preventDefault();\n\n        signUpSchema.validate({name,email,address,contact,password},{abortEarly:false})\n        .then((res)=>{\n            console.log(\"signup success\");\n        })\n        .catch((error)=>{\n            error.inner.forEach((e)=>{\n                if(e.path===\"email\")\n                {\n                    console.log(\"invalid email\");\n                }\n\n                if(e.path===\"name\")\n                {\n                    console.log(\"invalid name\");\n                }\n                if(e.path===\"address\")\n                {\n                    console.log(\"invalid address\");\n                }\n                if(e.path===\"contact\")\n                {\n                    console.log(\"invalid contact\");\n                }\n                \n                if(e.path===\"password\")\n                {\n                    console.log(\"invalid password\");\n                    //dispatch({type:loginConstants.setPasswordError,payload:e.message});\n                }\n            });\n        });\n\n        console.log(name);\n        console.log(email);\n        console.log(address);\n        console.log(contact);\n        console.log(password);\n    }\n    return(\n        <div>\n            <form onSubmit={onSubmit}>\n            Name:<input  type=\"text\" value={name} onChange={e=>\n                {dispatch({type:signUpConstants.setName,payload:e.target.value});}\n            }\n            />\n            <br/>\n            Email:\n            <input  type=\"email\" value={email} onChange={e=>\n                {dispatch({type:signUpConstants.setEmail,payload:e.target.value});}\n            }\n            />\n            <br/>\n            Address:\n            <input  type=\"text\" value={address} onChange={p=>\n                {dispatch({type:signUpConstants.setAddress,payload:p.target.value});}\n            }/>\n            <br/>\n            Contact No:\n            <input  type=\"number\" value={contact} onChange={p=>\n                {dispatch({type:signUpConstants.setContact,payload:p.target.value});}\n            }/>\n            <br/>\n\n            Password:\n            <input  type=\"password\" value={password} onChange={p=>\n                {dispatch({type:signUpConstants.setPassword,payload:p.target.value});}\n                }/>\n            <br/>\n            <button type=\"submit\">Submit</button>\n            <button type=\"reset\">clear</button>\n        </form>\n        </div>\n    );\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}