{"ast":null,"code":"var _jsxFileName = \"/home/josh-user/Documents/joshTraining/react/reactdemo/src/views/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport axios from \"axios\";\nimport base_url from \"../api/apiUrl\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\nconst loginConstants = {\n  setEmail: 'SET_EMAIL',\n  setPassword: 'SET_PASSWORD',\n  setEmailError: 'SET_EMAIL_ERROR',\n  setPasswordError: 'SET_PASSWORD_ERROR'\n};\nconst loginSchema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required().min(8)\n});\n\nconst reducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case loginConstants.setEmail:\n      {\n        return { ...state,\n          email: payload\n        };\n      }\n\n    case loginConstants.setPassword:\n      {\n        return { ...state,\n          password: payload\n        };\n      }\n\n    case loginConstants.setPasswordError:\n      {\n        return { ...state,\n          passwordError: payload\n        };\n      }\n\n    case loginConstants.setEmailError:\n      {\n        return { ...state,\n          emailError: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default function Login(props) {\n  _s();\n\n  // const[email,setEmail]=useState(\"\")\n  // const[password,setPassword]=useState(\"\")\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    email,\n    password,\n    emailError,\n    passwordError\n  } = state;\n\n  const onSubmit = event => {\n    event.preventDefault(); // const isLongEnough=password.length>=8;\n    // const noSpaces=password.indexOf(\" \") === -1;\n    // const isValid=isLongEnough&&noSpaces;\n\n    loginSchema.validate({\n      email,\n      password\n    }, {\n      abortEarly: false\n    }).then(res => {\n      axios.post(`${base_url}`, {\n        email: email,\n        password: password\n      }).then(response => {\n        props.onLoginSuccess();\n      }, error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      error.inner.forEach(e => {\n        if (e.path === \"email\") {\n          dispatch({\n            type: loginConstants.setEmailError,\n            payload: e.message\n          });\n        }\n\n        if (e.path === \"password\") {\n          dispatch({\n            type: loginConstants.setPasswordError,\n            payload: e.message\n          });\n        }\n      });\n    }); // if(isValid)\n    // {\n    //     axios.post(`${base_url}`,{\n    //         email:email,\n    //         password:password,\n    //     }).then(\n    //         (response)=>{\n    //             props.onLoginSuccess();\n    //         },\n    //         (error)=>{\n    //             console.log(error);\n    //         }\n    //     )\n    // }\n    // else{\n    //     console.log(email,password);\n    // }\n  };\n\n  const clearEmailField = () => {\n    //setEmail(\"\")\n    dispatch({\n      type: loginConstants.setEmail,\n      payload: \"\"\n    });\n  };\n\n  const clearPasswordField = () => {\n    //setPassword(\"\")\n    dispatch({\n      type: loginConstants.setPassword,\n      payload: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => //setEmail(e.target.value)\n      {\n        dispatch({\n          type: loginConstants.setEmail,\n          payload: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: clearEmailField,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emailError && /*#__PURE__*/_jsxDEV(\"sub\", {\n        children: [emailError, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: p => //setPassword(p.target.value)\n      {\n        dispatch({\n          type: loginConstants.setPassword,\n          payload: p.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: clearPasswordField,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: passwordError && /*#__PURE__*/_jsxDEV(\"sub\", {\n        children: [passwordError, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"reset\",\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/josh-user/Documents/joshTraining/react/reactdemo/src/views/Login.jsx"],"names":["useState","useReducer","axios","base_url","yup","initialState","email","password","emailError","passwordError","loginConstants","setEmail","setPassword","setEmailError","setPasswordError","loginSchema","object","shape","string","required","min","reducer","state","action","type","payload","Login","props","dispatch","onSubmit","event","preventDefault","validate","abortEarly","then","res","post","response","onLoginSuccess","error","console","log","catch","inner","forEach","e","path","message","clearEmailField","clearPasswordField","target","value","p"],"mappings":"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","sourcesContent":["import { useState,useReducer } from \"react\";\nimport axios from \"axios\";\nimport base_url from \"../api/apiUrl\";\nimport * as yup from 'yup';\n\n\nconst initialState={\n    email:\"\",\n    password:\"\",\n    emailError:\"\",\n    passwordError:\"\"\n}\n\nconst loginConstants={\n    setEmail:'SET_EMAIL',\n    setPassword:'SET_PASSWORD',\n    setEmailError:'SET_EMAIL_ERROR',\n    setPasswordError:'SET_PASSWORD_ERROR',\n}\n\nconst loginSchema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().required().min(8)\n  });\n  \n\nconst reducer=(state,action)=>{\n\n    const {type,payload}=action\n\n    switch(type)\n    {\n        case loginConstants.setEmail:{\n            return{\n                ...state,\n                email:payload\n            };\n        }\n\n\n        case loginConstants.setPassword:{\n            return{\n                ...state,\n                password:payload\n            };\n\n        }\n\n        case loginConstants.setPasswordError:{\n            return{\n                ...state,\n                passwordError:payload\n            };\n\n        }\n\n        case loginConstants.setEmailError:{\n            return{\n                ...state,\n                emailError:payload\n            };\n\n        }\n\n\n        default:return state;\n    }\n}\n\n\n\nexport default function Login(props)\n{\n\n    // const[email,setEmail]=useState(\"\")\n    // const[password,setPassword]=useState(\"\")\n\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const {email,password,emailError,passwordError}=state;\n    \n    const onSubmit=(event)=>{\n        event.preventDefault()\n\n        // const isLongEnough=password.length>=8;\n        // const noSpaces=password.indexOf(\" \") === -1;\n        // const isValid=isLongEnough&&noSpaces;\n\n        loginSchema\n        .validate({email,password},{abortEarly:false})\n        .then((res)=>{\n            axios.post(`${base_url}`,{\n                        email:email,\n                        password:password,\n                    }).then(\n                        (response)=>{\n                            props.onLoginSuccess();\n                        },\n                        (error)=>{\n                            console.log(error);\n                        }\n                    )\n        })\n        .catch((error)=>{\n            error.inner.forEach((e)=>{\n                if(e.path===\"email\")\n                {\n                    dispatch({type:loginConstants.setEmailError,payload:e.message});\n                }\n\n                if(e.path===\"password\")\n                {\n                    dispatch({type:loginConstants.setPasswordError,payload:e.message});\n                }\n            });\n        });\n\n\n\n        // if(isValid)\n        // {\n        //     axios.post(`${base_url}`,{\n        //         email:email,\n        //         password:password,\n        //     }).then(\n        //         (response)=>{\n        //             props.onLoginSuccess();\n        //         },\n        //         (error)=>{\n        //             console.log(error);\n        //         }\n        //     )\n        // }\n        // else{\n        //     console.log(email,password);\n        // }\n\n }\n\n    const clearEmailField=()=>{\n        //setEmail(\"\")\n        dispatch({ type: loginConstants.setEmail, payload: \"\" });\n\n    }\n\n    const clearPasswordField=()=>{\n        //setPassword(\"\")\n        dispatch({ type: loginConstants.setPassword, payload: \"\" });\n\n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <input  type=\"email\" value={email} onChange={e=>\n                //setEmail(e.target.value)\n                {dispatch({type:loginConstants.setEmail,payload:e.target.value});}\n            }\n                \n                />\n            <button type=\"button\" onClick={clearEmailField}>&times;</button>\n            <div>{emailError && <sub>{emailError} </sub>}</div>\n            <input  type=\"password\" value={password} onChange={p=>\n                //setPassword(p.target.value)\n                {dispatch({type:loginConstants.setPassword,payload:p.target.value});}\n                }/>\n            <button type=\"button\" onClick={clearPasswordField}>&times;</button>\n            <div>{passwordError && <sub>{passwordError} </sub>}</div>\n            <button type=\"submit\">Submit</button>\n            <button type=\"reset\">clear</button>\n        </form>\n    )\n}\n "]},"metadata":{},"sourceType":"module"}